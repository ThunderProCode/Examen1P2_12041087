/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package examen1lab2p2_hectoracosta;

import examen1lab2p2_hectoracosta.Personas.alien;
import examen1lab2p2_hectoracosta.Personas.deidad;
import examen1lab2p2_hectoracosta.Personas.mutant;
import examen1lab2p2_hectoracosta.Personas.normal;
import examen1lab2p2_hectoracosta.Personas.radioactive;
import examen1lab2p2_hectoracosta.Personas.superHuman;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author ThunderKnight
 */
public class MainScreen extends javax.swing.JFrame {

    DefaultListModel listModel1 = new DefaultListModel();
    DefaultListModel heroesListModel1 = new DefaultListModel();
    DefaultListModel villainsListModel1 = new DefaultListModel();
    DefaultListModel squadsListModel1 = new DefaultListModel();
    DefaultListModel universesListModel1 = new DefaultListModel();
    
    /**
     * Creates new form MainScreen
     */
    public MainScreen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nameInput = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        powerInput = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        weaknessInput = new javax.swing.JTextField();
        typeTrueInput = new javax.swing.JRadioButton();
        typeFalseInput = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        physicalStrengthInput = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        strengthInput = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        mentalStrengthInput = new javax.swing.JSpinner();
        typeInput = new javax.swing.JComboBox<>();
        createButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        addMutantFactor = new javax.swing.JButton();
        removeMutantFactor = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        mutantFactorsList = new javax.swing.JList<>();
        jLabel8 = new javax.swing.JLabel();
        ageInput = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        accidentTypeInput = new javax.swing.JTextField();
        deidadInput = new javax.swing.JRadioButton();
        alienInput = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        planetInput = new javax.swing.JTextField();
        hasBelievers = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        mythologyInput = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        superpowersInput = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        squadMembersList = new javax.swing.JList<>();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        heroesList = new javax.swing.JList<>();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        villainsList = new javax.swing.JList<>();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        squadsList = new javax.swing.JList<>();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        universesList = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Name: ");

        jLabel2.setText("Power:");

        jLabel3.setText("Weakness:");

        typeTrueInput.setText("Heroe");
        typeTrueInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeTrueInputActionPerformed(evt);
            }
        });

        typeFalseInput.setText("Villain");
        typeFalseInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeFalseInputActionPerformed(evt);
            }
        });

        jLabel4.setText("Strength:");

        jLabel5.setText("Mental Strength:");

        jLabel6.setText("Physical Strength:");

        typeInput.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Persona Normal", "Mutante", "Por Accidente Radioactivo", "Extraterrestre", "SuperHumano" }));
        typeInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeInputActionPerformed(evt);
            }
        });

        createButton.setText("Create");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        jLabel7.setText("Factores Mutantes: ");

        addMutantFactor.setText("+");
        addMutantFactor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMutantFactorActionPerformed(evt);
            }
        });

        removeMutantFactor.setText("-");
        removeMutantFactor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeMutantFactorActionPerformed(evt);
            }
        });

        mutantFactorsList.setModel(listModel1);
        jScrollPane1.setViewportView(mutantFactorsList);

        jLabel8.setText("Edad al momento del accidente: ");

        jLabel9.setText("Tipo de accidente: ");

        deidadInput.setText("Deidad");
        deidadInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deidadInputActionPerformed(evt);
            }
        });

        alienInput.setText("Alien");
        alienInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alienInputActionPerformed(evt);
            }
        });

        jLabel10.setText("Planet:");

        hasBelievers.setText("Tiene Creyentes");

        jLabel11.setText("Mitologia:");

        jLabel12.setText("Superpoder:");

        superpowersInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                superpowersInputActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 6, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(physicalStrengthInput, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel4))
                                .addGap(60, 60, 60)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mentalStrengthInput)
                            .addComponent(strengthInput)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(createButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(accidentTypeInput))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ageInput))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(typeInput, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(weaknessInput, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(powerInput, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(nameInput, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(addMutantFactor, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(removeMutantFactor, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(typeFalseInput)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(typeTrueInput))
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addGap(18, 18, 18)
                                        .addComponent(superpowersInput))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(hasBelievers)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(mythologyInput))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(deidadInput)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(alienInput)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(planetInput)))))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(powerInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(weaknessInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(physicalStrengthInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(mentalStrengthInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(strengthInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(typeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeFalseInput)
                    .addComponent(typeTrueInput))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addMutantFactor, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(removeMutantFactor, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(ageInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(accidentTypeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deidadInput)
                    .addComponent(alienInput)
                    .addComponent(jLabel10)
                    .addComponent(planetInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hasBelievers)
                    .addComponent(jLabel11)
                    .addComponent(mythologyInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(superpowersInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(createButton)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Create Person", jPanel1);

        jLabel17.setText("Name: ");

        jLabel18.setText("Base: ");

        jLabel19.setText("Lider: ");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jRadioButton1.setText("Villains Squad");

        jRadioButton2.setText("Superheroes Squad");

        jLabel20.setText("Members: ");

        squadMembersList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane6.setViewportView(squadMembersList);

        jButton2.setText("Create");

        jButton3.setText("+");

        jButton4.setText("-");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1)
                            .addComponent(jTextField2)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel19))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jRadioButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jRadioButton2)
                        .addGap(30, 30, 30))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addGap(0, 14, Short.MAX_VALUE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2))
                .addGap(18, 18, 18)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap(168, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Create Squad", jPanel5);

        heroesList.setModel(heroesListModel1);
        jScrollPane2.setViewportView(heroesList);

        jLabel13.setText("Heroes");

        jLabel14.setText("Villains");

        jScrollPane3.setViewportView(villainsList);

        jLabel15.setText("Squads");

        jScrollPane4.setViewportView(squadsList);

        jLabel16.setText("Universes");

        jScrollPane5.setViewportView(universesList);

        jButton1.setText("Ver mas");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane5)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(65, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("List", jPanel2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 316, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 604, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Delete", jPanel3);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 316, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 604, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Simulate", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void typeInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeInputActionPerformed
        int selectedIndex = typeInput.getSelectedIndex();
        System.out.println(selectedIndex);
        switch(selectedIndex){
            case 0://Normal
                visibleMutantProperties(false);
                visibleRadioactiveProperties(false);
                visibleExtraterrestreProperties(false);
                visibleDeidadProperties(false);
                visibleAlienProperties(false);
                visibleSuperhumanProperties(false);
                break;
                
            case 1://Mutante
                visibleMutantProperties(true);
                visibleRadioactiveProperties(false);
                visibleExtraterrestreProperties(false);
                visibleDeidadProperties(false);
                visibleAlienProperties(false);
                visibleSuperhumanProperties(false);

                break;
                
            case 2://Radioactivo
                visibleMutantProperties(false);
                visibleRadioactiveProperties(true);
                visibleExtraterrestreProperties(false);
                visibleDeidadProperties(false);
                visibleAlienProperties(false);
                visibleSuperhumanProperties(false);
                 break;
                
            case 3://Extraterrestre
                visibleMutantProperties(false);
                visibleRadioactiveProperties(false);
                visibleExtraterrestreProperties(true);
                visibleSuperhumanProperties(false);
                visibleDeidadProperties(false);
                visibleAlienProperties(false);
                
                break;
                
            case 4://SuperHumano
                visibleMutantProperties(false);
                visibleRadioactiveProperties(false);
                visibleExtraterrestreProperties(false);
                visibleDeidadProperties(false);
                visibleAlienProperties(false);
                visibleSuperhumanProperties(true);
                break;
                
        }
    }//GEN-LAST:event_typeInputActionPerformed

    private void addMutantFactorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMutantFactorActionPerformed
        String mutantFactor = JOptionPane.showInputDialog(this,"Ingrese el factor mutante: ");
        listModel1.addElement(mutantFactor);
        mutantFactorsList.setModel(listModel1);
    }//GEN-LAST:event_addMutantFactorActionPerformed

    private void removeMutantFactorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeMutantFactorActionPerformed
        int selectedIndex = mutantFactorsList.getSelectedIndex();
        if(selectedIndex != -1){
            listModel1.remove(selectedIndex);
        }
    }//GEN-LAST:event_removeMutantFactorActionPerformed

    private void superpowersInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_superpowersInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_superpowersInputActionPerformed

    private void deidadInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deidadInputActionPerformed
        if(deidadInput.isSelected()){
            visibleDeidadProperties(true);
            alienInput.setSelected(false);
            visibleAlienProperties(false);
        }else{
            visibleDeidadProperties(false);
        }
    }//GEN-LAST:event_deidadInputActionPerformed

    private void alienInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alienInputActionPerformed
        if(alienInput.isSelected()){
            visibleAlienProperties(true);
            deidadInput.setSelected(false);
            visibleDeidadProperties(false);
        }else{
            visibleAlienProperties(false);
        }
    }//GEN-LAST:event_alienInputActionPerformed

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
        int selectedIndex = typeInput.getSelectedIndex();
        
        switch(selectedIndex){
            case 0:
                createNormalPerson();
                break;
            case 1:
                createMutant();
                break;
            case 2:
                createRadioactive();
                break;
            case 3:
                if(deidadInput.isSelected()){
                    createDeidad();
                }else if(alienInput.isSelected()){
                    createAlien();
                }
                break;
            case 4:
                createSuperHuman();
                break;
        }
        
    }//GEN-LAST:event_createButtonActionPerformed

    private void typeFalseInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeFalseInputActionPerformed
        typeTrueInput.setSelected(false);
    }//GEN-LAST:event_typeFalseInputActionPerformed

    private void typeTrueInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeTrueInputActionPerformed
        typeFalseInput.setSelected(false);
    }//GEN-LAST:event_typeTrueInputActionPerformed

    //------------------CREATE METHODS------------------------------------------
    
    private void createSuperHuman(){
        String name = nameInput.getText();
        String power = powerInput.getText();
        String weakness = weaknessInput.getText();
        Boolean type = getHeroOrVillain();
        int strength = (Integer) strengthInput.getValue() ;
        int mentalStrength = (Integer) mentalStrengthInput.getValue();
        int physicalStrength = (Integer) physicalStrengthInput.getValue();
        Boolean hasSquad = false;  
        String superpower = superpowersInput.getText();
        superHuman newSuperHuman = new superHuman(superpower,name,power,weakness,type,strength,mentalStrength,physicalStrength,hasSquad);
        addPerson(type,newSuperHuman);
    }
    
    private void createAlien(){
        String name = nameInput.getText();
        String power = powerInput.getText();
        String weakness = weaknessInput.getText();
        Boolean type = getHeroOrVillain();
        int strength = (Integer) strengthInput.getValue() ;
        int mentalStrength = (Integer) mentalStrengthInput.getValue();
        int physicalStrength = (Integer) physicalStrengthInput.getValue();
        Boolean hasSquad = false;   
        String planet = planetInput.getText();
        
        alien newAlien = new alien(name,power,weakness,type,strength,mentalStrength,physicalStrength,hasSquad,planet);
        
        addPerson(type,newAlien);
        
    }
    
    private void createDeidad(){
        String name = nameInput.getText();
        String power = powerInput.getText();
        String weakness = weaknessInput.getText();
        Boolean type = getHeroOrVillain();
        int strength = (Integer) strengthInput.getValue() ;
        int mentalStrength = (Integer) mentalStrengthInput.getValue();
        int physicalStrength = (Integer) physicalStrengthInput.getValue();
        Boolean hasSquad = false;   
        boolean hasBeliever = hasBelievers.isSelected();
        String mythology = mythologyInput.getText();
        
        deidad newDeidad = new deidad(hasBeliever,mythology,name,power,weakness,type,strength,mentalStrength,physicalStrength,hasSquad);
        
        addPerson(type,newDeidad);
        
    }
    
    //Crear radioactivo
    private void createRadioactive(){
        String name = nameInput.getText();
        String power = powerInput.getText();
        String weakness = weaknessInput.getText();
        Boolean type = getHeroOrVillain();
        int strength = (Integer) strengthInput.getValue() ;
        int mentalStrength = (Integer) mentalStrengthInput.getValue();
        int physicalStrength = (Integer) physicalStrengthInput.getValue();
        Boolean hasSquad = false;
        int age = (Integer) ageInput.getValue();
        String accidentType = accidentTypeInput.getText();
        radioactive newRadioactive = new radioactive(age,accidentType,name,power,weakness,type,strength,mentalStrength,physicalStrength,hasSquad);
        addPerson(type,newRadioactive);
    }
    
    //Crear mutante
    private void createMutant(){
        String name = nameInput.getText();
        String power = powerInput.getText();
        String weakness = weaknessInput.getText();
        Boolean type = getHeroOrVillain();
        int strength = (Integer) strengthInput.getValue() ;
        int mentalStrength = (Integer) mentalStrengthInput.getValue();
        int physicalStrength = (Integer) physicalStrengthInput.getValue();
        Boolean hasSquad = false;
        ArrayList<String> mutantFactors = new ArrayList();
        
        for (int i = 0; i < mutantFactorsList.getModel().getSize() ; i++) {
            mutantFactors.add(mutantFactorsList.getModel().getElementAt(i).toString());
        }
        
        mutant newMutant = new mutant(name,power,weakness,type,strength,mentalStrength,physicalStrength,hasSquad);
        newMutant.setMutantFactors(mutantFactors);
        addPerson(type,newMutant);
    }
    
    //Crear normal 
    private void createNormalPerson(){
        String name = nameInput.getText();
        String power = powerInput.getText();
        String weakness = weaknessInput.getText();
        Boolean type = getHeroOrVillain();
        int strength = (Integer) strengthInput.getValue() ;
        int mentalStrength = (Integer) mentalStrengthInput.getValue();
        int physicalStrength = (Integer) physicalStrengthInput.getValue();
        Boolean hasSquad = false;
        normal newNormal = new normal(name,power,weakness,type,strength,mentalStrength,physicalStrength,hasSquad);
        addPerson(type,newNormal);
    }
    
    //--------------CREATHE METHOS END-------------------------------------------
    
    private void addPerson(boolean type, Persona persona){
        if(type){
            addHero(persona);
            JOptionPane.showMessageDialog(this, "Persona Creada con exito");
        }else{
            addVillain(persona);
            JOptionPane.showMessageDialog(this, "Persona Creada con exito");
        }
        setEmptyInputs();
    }
    
    private void addHero(Persona hero){
        Main.heroes.add(hero);
        heroesListModel1.addElement(hero.getName());
        heroesList.setModel(heroesListModel1);
    }
    
    private void addVillain(Persona villain){
        Main.villains.add(villain);
        villainsListModel1.addElement(villain.getName());
        villainsList.setModel(villainsListModel1);
    }
    
    private void setEmptyInputs(){
        nameInput.setText("");
        powerInput.setText("");
        weaknessInput.setText("");
        strengthInput.setValue(0);
        mentalStrengthInput.setValue(0);
        physicalStrengthInput.setValue(0);
    }
    
    private boolean getHeroOrVillain(){
        if(typeFalseInput.isSelected()){
            return false;
        }else{
            return true;
        }
    }
    
    public void visibleMutantProperties(Boolean booleano){
        jLabel7.setVisible(booleano);
        mutantFactorsList.setVisible(booleano);
        addMutantFactor.setVisible(booleano);
        removeMutantFactor.setVisible(booleano);
    }
    
    public void visibleRadioactiveProperties(Boolean booleano){
        jLabel8.setVisible(booleano);
        accidentTypeInput.setVisible(booleano);
        ageInput.setVisible(booleano);
        jLabel9.setVisible(booleano);
    }
    
    public void visibleExtraterrestreProperties(Boolean booleano){
        deidadInput.setVisible(booleano);
        alienInput.setVisible(booleano);
    }
    
    public void visibleDeidadProperties(Boolean booleano){
        hasBelievers.setVisible(booleano);
        jLabel11.setVisible(booleano);
        mythologyInput.setVisible(booleano);
    }
    
    public void visibleAlienProperties(Boolean booleano){
        jLabel10.setVisible(booleano);
        planetInput.setVisible(booleano);
    }
    
    public void visibleSuperhumanProperties(Boolean booleano){
        jLabel12.setVisible(booleano);
        superpowersInput.setVisible(booleano);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField accidentTypeInput;
    public javax.swing.JButton addMutantFactor;
    private javax.swing.JSpinner ageInput;
    private javax.swing.JRadioButton alienInput;
    private javax.swing.JButton createButton;
    private javax.swing.JRadioButton deidadInput;
    private javax.swing.JRadioButton hasBelievers;
    private javax.swing.JList<String> heroesList;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    public javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JSpinner mentalStrengthInput;
    public javax.swing.JList<String> mutantFactorsList;
    private javax.swing.JTextField mythologyInput;
    private javax.swing.JTextField nameInput;
    private javax.swing.JSpinner physicalStrengthInput;
    private javax.swing.JTextField planetInput;
    private javax.swing.JTextField powerInput;
    public javax.swing.JButton removeMutantFactor;
    private javax.swing.JList<String> squadMembersList;
    private javax.swing.JList<String> squadsList;
    private javax.swing.JSpinner strengthInput;
    private javax.swing.JTextField superpowersInput;
    private javax.swing.JRadioButton typeFalseInput;
    private javax.swing.JComboBox<String> typeInput;
    private javax.swing.JRadioButton typeTrueInput;
    private javax.swing.JList<String> universesList;
    private javax.swing.JList<String> villainsList;
    private javax.swing.JTextField weaknessInput;
    // End of variables declaration//GEN-END:variables
}
